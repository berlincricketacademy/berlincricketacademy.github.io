{"version":3,"sources":["webpack:///./src/pages/blog/index.js","webpack:///./src/components/BlogRoll.js"],"names":["BlogIndexPage","render","heading","subheading","showSocialIcons","className","React","Component","BlogRoll","posts","this","props","data","allMarkdownRemark","edges","map","post","node","key","id","style","backgroundImage","frontmatter","featuredimage","childImageSharp","fluid","src","height","backgroundSize","backgroundRepeat","backgroundPosition","borderRadius","to","fields","slug","title","toUpperCase","display","marginTop","date","description","query","count"],"mappings":"2MAMqBA,E,gLACnBC,OAAA,WACE,OACE,kBAAC,IAAD,CACEC,QAAQ,cACRC,WAAW,wEACXC,iBAAe,GAEf,6BAASC,UAAU,WACjB,yBAAKA,UAAU,aACb,kBAAC,IAAD,KACE,kBAAC,IAAD,W,GAX6BC,IAAMC,Y,6xNCD3CC,E,gLACJP,OAAA,WAAU,IAEOQ,EADEC,KAAKC,MAAdC,KACsBC,kBAAtBC,MAER,OACE,yBAAKT,UAAU,oBACZI,GACCA,EAAMM,KAAI,gBAASC,EAAT,EAAGC,KAAH,OACR,yBAAKZ,UAAU,sBAAsBa,IAAKF,EAAKG,IAC7C,6BAASd,UAAU,mCACjB,yBACEA,UAAU,aACVe,MAAO,CACLC,gBAAgB,QAASL,EAAKM,YAAYC,cAAcC,gBAAgBC,MAAMC,IAA/D,KACfC,OAAQ,QACRC,eAAgB,QAChBC,iBAAkB,YAClBC,mBAAoB,SACpBC,aAAc,QAGhB,4BAAQ1B,UAAU,WAiBpB,yBAAKA,UAAU,uCACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,iBACb,kBAAC,IAAD,CACEA,UAAU,8DACV2B,GAAIhB,EAAKiB,OAAOC,MAEflB,EAAKM,YAAYa,MAAMC,eAE1B,0BACE/B,UAAU,6CACVe,MAAO,CACLiB,QAAS,eACTC,UAAW,WAGZtB,EAAKM,YAAYiB,QAIxB,yBAAKlC,UAAU,WACZW,EAAKM,YAAYkB,YAClB,6BACA,6BACA,kBAAC,IAAD,CAAMnC,UAAU,SAAS2B,GAAIhB,EAAKiB,OAAOC,MAAzC,2B,GA/DG5B,IAAMC,WAoFd,sBACb,kBAAC,IAAD,CACEkC,MAAK,aAgCLxC,OAAQ,SAACW,EAAM8B,GAAP,OAAiB,kBAAClC,EAAD,CAAUI,KAAMA,EAAM8B,MAAOA,KAjCxD","file":"component---src-pages-blog-index-js-16229934de01b1ad118b.js","sourcesContent":["import React from 'react';\n\nimport Layout from '../../components/Layout';\nimport BlogRoll from '../../components/BlogRoll';\nimport PageSection from '../../components/PageSection';\n\nexport default class BlogIndexPage extends React.Component {\n  render() {\n    return (\n      <Layout\n        heading=\"Latest News\"\n        subheading=\"Follow us on Social Media - keep up to date with all the latest news \"\n        showSocialIcons\n      >\n        <section className=\"section\">\n          <div className=\"container\">\n            <PageSection>\n              <BlogRoll />\n            </PageSection>\n          </div>\n        </section>\n      </Layout>\n    );\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link, graphql, StaticQuery } from 'gatsby'\nimport PreviewCompatibleImage from './PreviewCompatibleImage'\n\nclass BlogRoll extends React.Component {\n  render() {\n    const { data } = this.props\n    const { edges: posts } = data.allMarkdownRemark\n\n    return (\n      <div className=\"tile is-ancestor\">\n        {posts &&\n          posts.map(({ node: post }) => (\n            <div className=\"is-parent tile is-4\" key={post.id}>\n              <article className=\"card blog-item-card shadow-dark\">\n                <div \n                  className=\"card-image\"\n                  style={{\n                    backgroundImage: `url('${post.frontmatter.featuredimage.childImageSharp.fluid.src}')`,\n                    height: '250px',\n                    backgroundSize: 'cover',\n                    backgroundRepeat: 'no-repeat',\n                    backgroundPosition: 'center',\n                    borderRadius: '4px'\n                  }}\n                >\n                  <figure className=\"image\">\n                    {/* <img \n                      src={post.frontmatter.featuredimage.childImageSharp.fluid.src}\n                      alt={`featured image thumbnail for post ${post.frontmatter.title}`}\n                      style={{\n                        width: '100%',\n                        height: '150px'\n                      }}  \n                    /> */}\n                    {/* <PreviewCompatibleImage\n                      imageInfo={{\n                        image: post.frontmatter.featuredimage,\n                        alt: `featured image thumbnail for post ${post.frontmatter.title}`,\n                      }}\n                    /> */}\n                  </figure>\n                </div>\n                <div className=\"card-content blog-item-card-content\">\n                  <div className=\"media\">\n                    <div className=\"media-content\">\n                      <Link\n                        className=\"is-spaced has-text-white is-size-4 has-text-weight-semibold\"\n                        to={post.fields.slug}\n                      >\n                        {post.frontmatter.title.toUpperCase()}\n                      </Link>\n                      <span\n                        className=\"subtitle is-size-5 is-block has-text-white\"\n                        style={{\n                          display: 'inline-block',\n                          marginTop: '1.5rem'\n                        }}\n                      >\n                        {post.frontmatter.date}\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"content\">\n                    {post.frontmatter.description}\n                    <br />\n                    <br />\n                    <Link className=\"button\" to={post.fields.slug}>\n                      Keep Reading â†’\n                    </Link>\n                  </div>\n                </div>\n              </article>\n            </div>\n          ))}\n      </div>\n    )\n  }\n}\n\nBlogRoll.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.array,\n    }),\n  }),\n}\n\nexport default () => (\n  <StaticQuery\n    query={graphql`\n      query BlogRollQuery {\n        allMarkdownRemark(\n          sort: { order: DESC, fields: [frontmatter___date] }\n          filter: { frontmatter: { templateKey: { eq: \"blog-post\" } } }\n        ) {\n          edges {\n            node {\n              excerpt(pruneLength: 400)\n              id\n              fields {\n                slug\n              }\n              frontmatter {\n                title\n                description\n                templateKey\n                date(formatString: \"MMMM DD, YYYY\")\n                featuredpost\n                featuredimage {\n                  childImageSharp {\n                    fluid(maxWidth: 120, quality: 100) {\n                      ...GatsbyImageSharpFluid\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={(data, count) => <BlogRoll data={data} count={count} />}\n  />\n)\n"],"sourceRoot":""}